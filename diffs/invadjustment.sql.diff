--- original/invadjustment.sql	2012-05-11 13:23:56.000000000 +0800
+++ invadjustment.sql	2012-05-10 06:58:09.000000000 +0800
@@ -1,22 +1,10 @@
-CREATE OR REPLACE FUNCTION invAdjustment(INTEGER, NUMERIC, TEXT, TEXT) RETURNS INTEGER AS $$
--- Copyright (c) 1999-2012 by OpenMFG LLC, d/b/a xTuple. 
--- See www.xtuple.com/CPAL for the full text of the software license.
-BEGIN
-  RETURN invAdjustment($1, $2, $3, $4, CURRENT_TIMESTAMP, NULL);
-END;
-$$ LANGUAGE 'plpgsql';
+-- Function: invadjustment(integer, numeric, text, text, timestamp with time zone, numeric)
 
-CREATE OR REPLACE FUNCTION invAdjustment(INTEGER, NUMERIC, TEXT, TEXT, TIMESTAMP WITH TIME ZONE) RETURNS INTEGER AS $$
--- Copyright (c) 1999-2012 by OpenMFG LLC, d/b/a xTuple. 
--- See www.xtuple.com/CPAL for the full text of the software license.
-BEGIN
-  RETURN invAdjustment($1, $2, $3, $4, $5, NULL);
-END;
-$$ LANGUAGE 'plpgsql';
+-- DROP FUNCTION invadjustment(integer, numeric, text, text, timestamp with time zone, numeric);
 
-CREATE OR REPLACE FUNCTION invAdjustment(INTEGER, NUMERIC, TEXT, TEXT, TIMESTAMP WITH TIME ZONE, NUMERIC) RETURNS INTEGER AS $$
--- Copyright (c) 1999-2012 by OpenMFG LLC, d/b/a xTuple. 
--- See www.xtuple.com/CPAL for the full text of the software license.
+CREATE OR REPLACE FUNCTION invadjustment(integer, numeric, text, text, timestamp with time zone, numeric)
+  RETURNS integer AS
+$BODY$
 DECLARE
   pItemsiteid     ALIAS FOR $1;
   pQty            ALIAS FOR $2;
@@ -24,6 +12,8 @@
   pComments       ALIAS FOR $4;
   pGlDistTS       ALIAS FOR $5;
   pCostValue      ALIAS FOR $6;
+
+  _CostValueOwn  numeric;
   _invhistid      INTEGER;
   _itemlocSeries  INTEGER;
 
@@ -37,12 +27,25 @@
     RETURN 0;
   END IF;
 
+  IF ( pQty > 0) THEN
+    IF (pCostValue IS NULL) THEN
+        RAISE EXCEPTION 'Cost value isn''t provided';
+    END IF;
+	_CostValueOwn := pCostValue;
+  ELSIF (pQty < 0) THEN
+    IF (pCostValue IS NOT NULL) THEN
+        RAISE EXCEPTION 'Cost value hasn''t sense for such type of transaction';
+    END IF;
+    
+    _CostValueOwn := itemcost_dispense(pItemsiteid, pQty);
+  END IF;
+  
   SELECT NEXTVAL('itemloc_series_seq') INTO _itemlocSeries;
   SELECT postInvTrans( itemsite_id, 'AD', pQty,
                        'I/M', 'AD', pDocumentNumber, '',
                        ('Miscellaneous Adjustment for item ' || item_number || E'\n' ||  pComments),
                        costcat_asset_accnt_id, costcat_adjustment_accnt_id,
-                       _itemlocSeries, pGlDistTS, pCostValue) INTO _invhistid
+                       _itemlocSeries, pGlDistTS, _CostValueOwn) INTO _invhistid
   FROM itemsite, item, costcat
   WHERE ( (itemsite_item_id=item_id)
    AND (itemsite_costcat_id=costcat_id)
@@ -51,4 +54,7 @@
   RETURN _itemlocSeries;
 
 END;
-$$ LANGUAGE 'plpgsql';
+$BODY$
+  LANGUAGE plpgsql VOLATILE
+  COST 100;
+ALTER FUNCTION invadjustment(integer, numeric, text, text, timestamp with time zone, numeric) OWNER TO "admin";
